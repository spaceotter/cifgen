#!/usr/bin/env bash
# This file is a bodge to call c2ffi multiple times to hopefully assemble a usable interface spec
# file for a C++ header.
# Usage: specgen <header> <language> <args for c2ffi>
set -e
set -x
args=( "$@" )
extra_args="-x $2 ${args[@]:2}"
orig=$1
base=$(basename "$orig")
base=$(echo "$base" | rev | cut -f 2- -d '.' | rev)
if [ "$2" == "c++" ]; then
    c2ffi "$orig" -D null -M "$base.mac.hpp" -T "$base.tem.hpp" $extra_args
    # the ordering from c2ffi is not determinstic
    sort "$base.mac.hpp" -o "$base.mac.hpp"
    echo "#include \"$base.tem.hpp\"" > "$base.all.hpp"
    echo "#include \"$base.mac.hpp\"" >> "$base.all.hpp"
    # find out which automatic macro definitions cause problems
    c2ffi "$base.all.hpp" -D null $extra_args 2> "$base.err" || echo "Filtering some bad macro constants"
    # erase the lines causing errors from the generated code
    grep -F "$base.mac.hpp" test.err | grep 'error:' | sed 's/^[^:]*:\([0-9]*\):.*/\1 d/' > "$base.sed"
    cp "$base.mac.hpp" "$base.mac.hpp.orig"
    sed -i -f "$base.sed" "$base.mac.hpp"
    c2ffi "$base.all.hpp" -D json $extra_args -o "$base.spec"
elif [ "$2" == "c" ]; then
    c2ffi "$orig" -D null -M "$base.mac.h" $extra_args
    # the ordering from c2ffi is not determinstic
    sort "$base.mac.h" -o "$base.mac.h"
    echo "#include \"$orig\"" > "$base.all.h"
    echo "#include \"$base.mac.h\"" >> "$base.all.h"
    # find out which automatic macro definitions cause problems
    c2ffi "$base.all.h" -D null $extra_args 2> "$base.err" || echo "Filtering some bad macro constants"
    # erase the lines causing errors from the generated code
    grep -F "$base.mac.h" test.err | grep 'error:' | sed 's/^[^:]*:\([0-9]*\):.*/\1 d/' > "$base.sed"
    cp "$base.mac.h" "$base.mac.h.orig"
    sed -i -f "$base.sed" "$base.mac.h"
    c2ffi "$base.all.h" -D json $extra_args -o "$base.spec"
fi
